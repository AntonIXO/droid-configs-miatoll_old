pushd $IMG_OUT_DIR # ./sfe-$DEVICE-$RELEASE_ID

DEVICE=@DEVICE@
EXTRA_NAME=@EXTRA_NAME@
DATE=$(date +"%Y%m%d")
LOS_VER="18.1"
bunzip2 -vf sfos-rootfs.tar.bz2
# Source release info e.g. VERSION
source ./os-release

# Locate rootfs .tar archive
for filename in *.tar; do
	GEN_IMG_BASE=$(basename $filename .tar) # sfe-$DEVICE-3.2.0.12
done
if [ ! -e "$GEN_IMG_BASE.tar" ]; then
	echo "[hybris-installer] No rootfs archive found, exiting..."
	exit 1
fi

# Make sure we have 'bc' to estimate rootfs size
zypper --non-interactive in bc &> /dev/null

# Roughly estimate the final rootfs size when installed
IMAGE_SIZE=`echo "scale=2; 2.25 * $(du -h $GEN_IMG_BASE.tar | cut -d'M' -f1)" | bc`
echo "[hybris-installer] Estimated rootfs size when installed: ${IMAGE_SIZE}M"

# Output filenames
DST_IMG=sfos-rootfs.tar
DST_PKG=$ID-$VERSION_ID-$DATE-$DEVICE$EXTRA_NAME # sailfishos-3.2.0.12-20191101-$DEVICE

# Clone hybris-installer if not preset (e.g. porters-ci build env)
if [ ! -d ../hybris/hybris-installer/ ]; then
	git clone --depth 1 https://github.com/sailfishos-oneplus5/hybris-installer ../hybris/hybris-installer > /dev/null
fi

# Copy rootfs & hybris-installer scripts into updater .zip tree
mkdir updater/
mv $GEN_IMG_BASE.tar updater/$DST_IMG
cp -r ../hybris/hybris-installer/hybris-installer/* updater/

# Update install script with image details
LOS_VER="18.1"
sed -e "s/%DEVICE%/$DEVICE/g" -e "s/%VERSION%/$VERSION/g" -e "s/%VERSION_ID%/$VERSION_ID/g" -e "s/%DATE%/$DATE/g" -e "s/%IMAGE_SIZE%/${IMAGE_SIZE}M/g" -e "s/%DST_PKG%/$DST_PKG/g" -e "s/%LOS_VER%/$LOS_VER/g" -i updater/META-INF/com/google/android/update-binary

# Pack updater .zip
pushd updater # sfe-$DEVICE-$RELEASE_ID/updater
echo "[hybris-installer] Creating package '$DST_PKG.zip'..."
zip -r ../$DST_PKG.zip .
mv $DST_IMG ../$GEN_IMG_BASE.tar
popd # sfe-$DEVICE-$RELEASE_ID

# Clean up working directory
rm -rf updater/

echo " DONE!"

popd # hadk source tree
